plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}
group 'guru.qa'
version '1.0'

def allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation (
            "com.codeborne:selenide:6.18.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "ch.qos.logback:logback-classic:1.4.9",
            'com.github.javafaker:javafaker:1.0.2'
    )
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("RemoteTest")
    }
}